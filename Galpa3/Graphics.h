//============================================================================//----------------------------------------------------------------------------//									Graphics.c//----------------------------------------------------------------------------//============================================================================// I like to isolate all the graphic routines - put them in their own file.// This way all the thousands of Rect variables and Pixmaps have a place to go.// Anyway, this file contains all the drawing routines./*#include "Externs.h"#include "SDL.h"#define kUpperEyeHeight			100#define kLowerEyeHeight			200#define kNumLightningPts		8#define kMaxNumUpdateRects		32typedef struct Point{    int hCoord;    int vCoord;} Point;typedef struct Rect
{
int left;
int top;
int right;
int bottom;
} Rect;SDL_Rect RectToSDLRect(Rect rect) {    SDL_Rect sdlRect;    sdlRect.x = rect.left;    sdlRect.y = rect.top;    sdlRect.w = rect.right;    sdlRect.h = rect.bottom;    return sdlRect;}void QuickUnionRect(Rect*, Rect*, Rect*);void CheckPlayerWrapAround(void);void DrawHand(void);void DrawEye(void);void DrawPlayer(void);void CheckEnemyWrapAround(short);void DrawEnemies(void);Rect		backSrcRect, workSrcRect, obSrcRect, playerSrcRect;Rect		numberSrcRect, idleSrcRect, enemyWalkSrcRect, enemyFlySrcRect;Rect		obeliskRects[4], playerRects[11], numbersSrc[11], numbersDest[11];Rect		updateRects1[kMaxNumUpdateRects], updateRects2[kMaxNumUpdateRects];Rect		flameSrcRect, flameDestRects[2], flameRects[4], eggSrcRect;Rect		platformSrcRect, platformCopyRects[9], helpSrcRect, eyeSrcRect;Rect		helpSrc, helpDest, handSrcRect, handRects[2], eyeRects[4];Point		leftLightningPts[kNumLightningPts], rightLightningPts[kNumLightningPts];CGrafPtr	backSrcMap, workSrcMap, obeliskSrcMap, playerSrcMap, eyeSrcMap;CGrafPtr	numberSrcMap, idleSrcMap, enemyWalkSrcMap, enemyFlySrcMap;CGrafPtr	flameSrcMap, eggSrcMap, platformSrcMap, helpSrcMap, handSrcMap;GrafPtr		playerMaskMap, enemyWalkMaskMap, enemyFlyMaskMap, eggMaskMap;GrafPtr		handMaskMap, eyeMaskMap;RgnHandle	playRgn;short		numUpdateRects1, numUpdateRects2;bool		whichList, helpOpen, scoresOpen;*/